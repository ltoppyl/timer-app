{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\i030ff\\\\dev\\\\personal-development\\\\timer_app\\\\src\\\\components\\\\Timer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Container, Text } from \"@chakra-ui/react\";\nimport { useTimer } from \"react-timer-hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = ({\n  expiryTimestamp\n}) => {\n  _s();\n\n  const {\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning\n  } = useTimer({\n    expiryTimestamp,\n    onExpire: () => console.warn(\"onExpire called\")\n  });\n  return (\n    /*#__PURE__*/\n    // <div style={{ textAlign: \"center\" }}>\n    //   <div style={{ fontSize: \"100px\" }}>\n    //     <span>{days}</span>d:<span>{hours}</span>h:<span>{minutes}</span>m:<span>{seconds}</span>s\n    //   </div>\n    //   <p>{isRunning ? \"Running\" : \"Not running\"}</p>\n    //   <ActionSelectButton expiryTimestamp={expiryTimestamp}></ActionSelectButton>\n    // </div>\n    _jsxDEV(Container, {\n      maxW: \"container.sm\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        textAlign: \"center\",\n        fontSize: 100,\n        children: [days, \":\", hours, \":\", minutes, \":\", seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        textAlign: \"center\",\n        fontSize: 10,\n        children: isRunning ? \"Running\" : \"Not running\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(Timer, \"cvUarUjUwbLw+y3rPu2wtQXDI4c=\", false, function () {\n  return [useTimer];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["C:/Users/i030ff/dev/personal-development/timer_app/src/components/Timer.tsx"],"names":["React","Container","Text","useTimer","Timer","expiryTimestamp","seconds","minutes","hours","days","isRunning","onExpire","console","warn"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAOA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgC;AAAA;;AAC5C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,KAApB;AAA2BC,IAAAA,IAA3B;AAAiCC,IAAAA;AAAjC,MAA+CP,QAAQ,CAAC;AAC5DE,IAAAA,eAD4D;AAE5DM,IAAAA,QAAQ,EAAE,MAAMC,OAAO,CAACC,IAAR,CAAa,iBAAb;AAF4C,GAAD,CAA7D;AAKA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAC,SAAD;AAAW,MAAA,IAAI,EAAC,cAAhB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAE,QAAjB;AAA2B,QAAA,QAAQ,EAAE,GAArC;AAAA,mBACGJ,IADH,OACUD,KADV,OACkBD,OADlB,OAC4BD,OAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAE,QAAjB;AAA2B,QAAA,QAAQ,EAAE,EAArC;AAAA,kBACGI,SAAS,GAAG,SAAH,GAAe;AAD3B;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAiBD,CAvBD;;GAAMN,K;UACiDD,Q;;;KADjDC,K;AAwBN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\r\nimport { Container, Text } from \"@chakra-ui/react\";\r\nimport { useTimer } from \"react-timer-hook\";\r\nimport ActionSelectButton from \"./ActionSelectButton\";\r\n\r\ntype Props = {\r\n  expiryTimestamp: Date;\r\n};\r\n\r\nconst Timer = ({ expiryTimestamp }: Props) => {\r\n  const { seconds, minutes, hours, days, isRunning } = useTimer({\r\n    expiryTimestamp,\r\n    onExpire: () => console.warn(\"onExpire called\"),\r\n  });\r\n\r\n  return (\r\n    // <div style={{ textAlign: \"center\" }}>\r\n    //   <div style={{ fontSize: \"100px\" }}>\r\n    //     <span>{days}</span>d:<span>{hours}</span>h:<span>{minutes}</span>m:<span>{seconds}</span>s\r\n    //   </div>\r\n    //   <p>{isRunning ? \"Running\" : \"Not running\"}</p>\r\n    //   <ActionSelectButton expiryTimestamp={expiryTimestamp}></ActionSelectButton>\r\n    // </div>\r\n    <Container maxW=\"container.sm\">\r\n      <Text textAlign={\"center\"} fontSize={100}>\r\n        {days}:{hours}:{minutes}:{seconds}\r\n      </Text>\r\n      <Text textAlign={\"center\"} fontSize={10}>\r\n        {isRunning ? \"Running\" : \"Not running\"}\r\n      </Text>\r\n    </Container>\r\n  );\r\n};\r\nexport default Timer;\r\n"]},"metadata":{},"sourceType":"module"}