{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\i030ff\\\\dev\\\\personal-development\\\\timer_app\\\\src\\\\components\\\\Timer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useTimer } from \"react-timer-hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = ({\n  expiryTimestamp\n}) => {\n  _s();\n\n  const {\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning,\n    start,\n    pause,\n    resume,\n    restart\n  } = useTimer({\n    expiryTimestamp,\n    onExpire: () => console.warn(\"onExpire called\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"100px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: days\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: hours\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 29\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 50\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 73\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: isRunning ? \"Running\" : \"Not running\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: start,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: pause,\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resume,\n      children: \"Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        // Restarts to 5 minutes timer\n        const time = new Date();\n        time.setSeconds(time.getSeconds() + 300);\n        restart(time);\n      },\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"6CHTXYE4hYR3Y6FCGCldSLAuexM=\", false, function () {\n  return [useTimer];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["C:/Users/i030ff/dev/personal-development/timer_app/src/components/Timer.tsx"],"names":["React","useTimer","Timer","expiryTimestamp","seconds","minutes","hours","days","isRunning","start","pause","resume","restart","onExpire","console","warn","textAlign","fontSize","time","Date","setSeconds","getSeconds"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAMA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgC;AAAA;;AAC5C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,KAApB;AAA2BC,IAAAA,IAA3B;AAAiCC,IAAAA,SAAjC;AAA4CC,IAAAA,KAA5C;AAAmDC,IAAAA,KAAnD;AAA0DC,IAAAA,MAA1D;AAAkEC,IAAAA;AAAlE,MAA8EX,QAAQ,CAAC;AAC3FE,IAAAA,eAD2F;AAE3FU,IAAAA,QAAQ,EAAE,MAAMC,OAAO,CAACC,IAAR,CAAa,iBAAb;AAF2E,GAAD,CAA5F;AAKA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAZ;AAAA,8BACE;AAAA,kBAAOV;AAAP;AAAA;AAAA;AAAA;AAAA,cADF,oBACsB;AAAA,kBAAOD;AAAP;AAAA;AAAA;AAAA;AAAA,cADtB,oBAC2C;AAAA,kBAAOD;AAAP;AAAA;AAAA;AAAA;AAAA,cAD3C,oBACkE;AAAA,kBAAOD;AAAP;AAAA;AAAA;AAAA;AAAA,cADlE;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBAAII,SAAS,GAAG,SAAH,GAAe;AAA5B;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAQ,MAAA,OAAO,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAQ,MAAA,OAAO,EAAEC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AACE,MAAA,OAAO,EAAE,MAAM;AACb;AACA,cAAMO,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAD,QAAAA,IAAI,CAACE,UAAL,CAAgBF,IAAI,CAACG,UAAL,KAAoB,GAApC;AACAT,QAAAA,OAAO,CAACM,IAAD,CAAP;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA3BD;;GAAMhB,K;UACgFD,Q;;;KADhFC,K;AA4BN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\r\nimport { useTimer } from \"react-timer-hook\";\r\n\r\ntype Props = {\r\n  expiryTimestamp: Date;\r\n};\r\n\r\nconst Timer = ({ expiryTimestamp }: Props) => {\r\n  const { seconds, minutes, hours, days, isRunning, start, pause, resume, restart } = useTimer({\r\n    expiryTimestamp,\r\n    onExpire: () => console.warn(\"onExpire called\"),\r\n  });\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <div style={{ fontSize: \"100px\" }}>\r\n        <span>{days}</span>:<span>{hours}</span>:<span>{minutes}</span>:<span>{seconds}</span>\r\n      </div>\r\n      <p>{isRunning ? \"Running\" : \"Not running\"}</p>\r\n      <button onClick={start}>Start</button>\r\n      <button onClick={pause}>Pause</button>\r\n      <button onClick={resume}>Resume</button>\r\n      <button\r\n        onClick={() => {\r\n          // Restarts to 5 minutes timer\r\n          const time = new Date();\r\n          time.setSeconds(time.getSeconds() + 300);\r\n          restart(time);\r\n        }}\r\n      >\r\n        Restart\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Timer;\r\n"]},"metadata":{},"sourceType":"module"}