{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\i030ff\\\\dev\\\\personal-development\\\\timer_app\\\\src\\\\components\\\\ActionSelectButton.tsx\";\nimport React from \"react\";\nimport { Button, HStack } from \"@chakra-ui/react\";\nimport SettingTime from \"./SettingTime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ActionSelectButton = ({\n  start,\n  pause,\n  resume,\n  restart,\n  settingTime,\n  setSettingTime\n}) => {\n  return /*#__PURE__*/_jsxDEV(HStack, {\n    justifyContent: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"black\",\n      variant: \"outline\",\n      onClick: start,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"black\",\n      variant: \"outline\",\n      onClick: pause,\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"black\",\n      variant: \"outline\",\n      onClick: resume,\n      children: \"Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"black\",\n      variant: \"outline\",\n      onClick: () => {\n        const time = new Date();\n        time.setSeconds(time.getSeconds() + settingTime);\n        restart(time);\n      },\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SettingTime, {\n      settingTime: settingTime,\n      setSettingTime: setSettingTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ActionSelectButton;\nexport default ActionSelectButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActionSelectButton\");","map":{"version":3,"sources":["C:/Users/i030ff/dev/personal-development/timer_app/src/components/ActionSelectButton.tsx"],"names":["React","Button","HStack","SettingTime","ActionSelectButton","start","pause","resume","restart","settingTime","setSettingTime","time","Date","setSeconds","getSeconds"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,kBAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAWA,MAAMC,kBAAkB,GAAG,CAAC;AAC1BC,EAAAA,KAD0B;AAE1BC,EAAAA,KAF0B;AAG1BC,EAAAA,MAH0B;AAI1BC,EAAAA,OAJ0B;AAK1BC,EAAAA,WAL0B;AAM1BC,EAAAA;AAN0B,CAAD,KAOd;AACX,sBACE,QAAC,MAAD;AAAQ,IAAA,cAAc,EAAE,QAAxB;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAC,OAApB;AAA4B,MAAA,OAAO,EAAC,SAApC;AAA8C,MAAA,OAAO,EAAEL,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAC,OAApB;AAA4B,MAAA,OAAO,EAAC,SAApC;AAA8C,MAAA,OAAO,EAAEC,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAC,OAApB;AAA4B,MAAA,OAAO,EAAC,SAApC;AAA8C,MAAA,OAAO,EAAEC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE,QAAC,MAAD;AACE,MAAA,WAAW,EAAC,OADd;AAEE,MAAA,OAAO,EAAC,SAFV;AAGE,MAAA,OAAO,EAAE,MAAM;AACb,cAAMI,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAD,QAAAA,IAAI,CAACE,UAAL,CAAgBF,IAAI,CAACG,UAAL,KAAoBL,WAApC;AACAD,QAAAA,OAAO,CAACG,IAAD,CAAP;AACD,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAqBE,QAAC,WAAD;AAAa,MAAA,WAAW,EAAEF,WAA1B;AAAuC,MAAA,cAAc,EAAEC;AAAvD;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAjCD;;KAAMN,kB;AAmCN,eAAeA,kBAAf","sourcesContent":["import React from \"react\";\r\nimport { Button, HStack } from \"@chakra-ui/react\";\r\nimport SettingTime from \"./SettingTime\";\r\n\r\ntype Props = {\r\n  start: () => void;\r\n  pause: () => void;\r\n  resume: () => void;\r\n  restart: (newExpiryTimestamp: Date, autoStart?: boolean | undefined) => void;\r\n  settingTime: number;\r\n  setSettingTime: React.Dispatch<React.SetStateAction<number>>;\r\n};\r\n\r\nconst ActionSelectButton = ({\r\n  start,\r\n  pause,\r\n  resume,\r\n  restart,\r\n  settingTime,\r\n  setSettingTime,\r\n}: Props) => {\r\n  return (\r\n    <HStack justifyContent={\"center\"}>\r\n      <Button colorScheme=\"black\" variant=\"outline\" onClick={start}>\r\n        Start\r\n      </Button>\r\n      <Button colorScheme=\"black\" variant=\"outline\" onClick={pause}>\r\n        Pause\r\n      </Button>\r\n      <Button colorScheme=\"black\" variant=\"outline\" onClick={resume}>\r\n        Resume\r\n      </Button>\r\n      <Button\r\n        colorScheme=\"black\"\r\n        variant=\"outline\"\r\n        onClick={() => {\r\n          const time = new Date();\r\n          time.setSeconds(time.getSeconds() + settingTime);\r\n          restart(time);\r\n        }}\r\n      >\r\n        Restart\r\n      </Button>\r\n      <SettingTime settingTime={settingTime} setSettingTime={setSettingTime} />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default ActionSelectButton;\r\n"]},"metadata":{},"sourceType":"module"}