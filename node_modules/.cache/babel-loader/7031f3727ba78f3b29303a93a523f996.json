{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\i030ff\\\\dev\\\\personal-development\\\\timer_app\\\\src\\\\components\\\\Button.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, HStack } from \"@chakra-ui/react\";\nimport { useTimer } from \"react-timer-hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StartButton = ({\n  expiryTimestamp\n}) => {\n  _s();\n\n  const {\n    start,\n    pause,\n    resume,\n    restart\n  } = useTimer({\n    expiryTimestamp,\n    onExpire: () => console.warn(\"onExpire called\")\n  });\n  return /*#__PURE__*/_jsxDEV(HStack, {\n    justifyContent: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"black\",\n      variant: \"outline\",\n      onClick: start,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"black\",\n      variant: \"outline\",\n      onClick: pause,\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"black\",\n      variant: \"outline\",\n      onClick: resume,\n      children: \"Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"black\",\n      variant: \"outline\",\n      onClick: () => {\n        const time = new Date();\n        time.setSeconds(time.getSeconds() + 300);\n        restart(time);\n      },\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StartButton, \"ls0nlljo/aQdmvv9jobzHbI1qO8=\", false, function () {\n  return [useTimer];\n});\n\n_c = StartButton;\nexport default StartButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartButton\");","map":{"version":3,"sources":["C:/Users/i030ff/dev/personal-development/timer_app/src/components/Button.tsx"],"names":["React","Button","HStack","useTimer","StartButton","expiryTimestamp","start","pause","resume","restart","onExpire","console","warn","time","Date","setSeconds","getSeconds"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,kBAA/B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAMA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgC;AAAA;;AAClD,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA;AAAxB,MAAoCN,QAAQ,CAAC;AACjDE,IAAAA,eADiD;AAEjDK,IAAAA,QAAQ,EAAE,MAAMC,OAAO,CAACC,IAAR,CAAa,iBAAb;AAFiC,GAAD,CAAlD;AAKA,sBACE,QAAC,MAAD;AAAQ,IAAA,cAAc,EAAE,QAAxB;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAC,OAApB;AAA4B,MAAA,OAAO,EAAC,SAApC;AAA8C,MAAA,OAAO,EAAEN,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAC,OAApB;AAA4B,MAAA,OAAO,EAAC,SAApC;AAA8C,MAAA,OAAO,EAAEC,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAC,OAApB;AAA4B,MAAA,OAAO,EAAC,SAApC;AAA8C,MAAA,OAAO,EAAEC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE,QAAC,MAAD;AACE,MAAA,WAAW,EAAC,OADd;AAEE,MAAA,OAAO,EAAC,SAFV;AAGE,MAAA,OAAO,EAAE,MAAM;AACb,cAAMK,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAD,QAAAA,IAAI,CAACE,UAAL,CAAgBF,IAAI,CAACG,UAAL,KAAoB,GAApC;AACAP,QAAAA,OAAO,CAACI,IAAD,CAAP;AACD,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA9BD;;GAAMT,W;UACsCD,Q;;;KADtCC,W;AAgCN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport { Button, HStack } from \"@chakra-ui/react\";\r\nimport { useTimer } from \"react-timer-hook\";\r\n\r\ntype Props = {\r\n  expiryTimestamp: Date;\r\n};\r\n\r\nconst StartButton = ({ expiryTimestamp }: Props) => {\r\n  const { start, pause, resume, restart } = useTimer({\r\n    expiryTimestamp,\r\n    onExpire: () => console.warn(\"onExpire called\"),\r\n  });\r\n\r\n  return (\r\n    <HStack justifyContent={\"center\"}>\r\n      <Button colorScheme=\"black\" variant=\"outline\" onClick={start}>\r\n        Start\r\n      </Button>\r\n      <Button colorScheme=\"black\" variant=\"outline\" onClick={pause}>\r\n        Pause\r\n      </Button>\r\n      <Button colorScheme=\"black\" variant=\"outline\" onClick={resume}>\r\n        Resume\r\n      </Button>\r\n      <Button\r\n        colorScheme=\"black\"\r\n        variant=\"outline\"\r\n        onClick={() => {\r\n          const time = new Date();\r\n          time.setSeconds(time.getSeconds() + 300);\r\n          restart(time);\r\n        }}\r\n      >\r\n        Restart\r\n      </Button>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default StartButton;\r\n"]},"metadata":{},"sourceType":"module"}